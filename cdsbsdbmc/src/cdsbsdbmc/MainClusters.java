/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cdsbsdbmc;

import static cdsbsdbmc.MainUI.decease;
import static cdsbsdbmc.MainUI.drsname;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author vlsi2
 */
public class MainClusters extends javax.swing.JFrame {
    
    ArrayList<String> dTemp= new ArrayList<String>();
    ArrayList<Integer> mainClusterIndexes = new ArrayList<Integer>();
    static ArrayList<String> furtherProcess = new ArrayList<String>();
    String EOL = "\r\n";
    
    
    public MainClusters() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Disease = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Disease.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        Disease.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Disease" }));
        Disease.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiseaseActionPerformed(evt);
            }
        });
        getContentPane().add(Disease);
        Disease.setBounds(40, 110, 130, 30);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("Create Cluster");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(230, 110, 127, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cdsbsdbmc/rr1.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 400, 310);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DiseaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiseaseActionPerformed
       dTemp=(ArrayList)decease.clone();
        List<String> newList = new ArrayList<>();
        for(Object dname : dTemp){
            if(!newList.contains(dname.toString())){
                newList.add(dname.toString());
            }
        }

        for(Object dname : newList){
            Disease.addItem(dname.toString());
        }
    }//GEN-LAST:event_DiseaseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         try{
        //String docName = Doctors.getSelectedItem().toString();
        String disName = Disease.getSelectedItem().toString();
        
        ArrayList<Integer> indexes= new ArrayList<Integer>();
        indexes.clear();
        for(int i=0;i<drsname.size();i++)
        {
            if( decease.get(i).toString().equals(disName))
            {
                mainClusterIndexes.add(i);
                indexes.add(i);
            }
            
        }
        System.out.println("size"+ indexes.size());
        File f= new File(disName);
        if(!f.exists())
        {
            f.mkdir();
        }
        else
        {
            System.out.println("failed to create directory");
        }
        System.out.println(indexes);
       
        
        Map<ArrayList<Integer>,ArrayList<Integer>> map1 = new HashMap<ArrayList<Integer>,ArrayList<Integer>>();
        ArrayList<Integer> newVals = new ArrayList<Integer>();
        newVals.clear();
        int minValu = indexes.get(0);
        int maxValu = indexes.get(indexes.size()-1);
        for(int i=0;i<indexes.size();i++){
            Random rand = new Random();
            int randomNum = rand.nextInt((maxValu - minValu) + 1) + minValu;
            newVals.add(randomNum);
        }       
        map1.put(indexes,newVals);
        
        FileOutputStream fos1 = new FileOutputStream("maincluster.txt");
        ObjectOutputStream os1 = new ObjectOutputStream(fos1);
        os1.writeObject(map1); 
        os1.close();
        fos1.close();
        
        for(int i=0;i<indexes.size();i++)
        {
            
            int inDex = indexes.get(i);
            FileOutputStream fos = new FileOutputStream(disName+"\\"+inDex+".txt");
            
            String toWrite = drsname.get(inDex).toString()+" "+MainUI.adharNo.get(inDex).toString()+" "+MainUI.patientname.get(inDex).toString()+" "+MainUI.age.get(inDex).toString()+" "+MainUI.gender.get(inDex).toString()+" "+decease.get(inDex).toString()+" "+MainUI.operation.get(inDex).toString()+" "+MainUI.dept.get(inDex).toString()+" "+MainUI.dod.get(inDex).toString()+" "+MainUI.labreport.get(inDex).toString()+" "+MainUI.bloodgroup.get(inDex).toString()+" "+MainUI.phonenumber.get(inDex).toString()+" "+MainUI.prescription.get(inDex).toString()+" "+MainUI.address.get(inDex).toString()+" "+ EOL;
            fos.write(toWrite.getBytes());
            fos.close();
            
            String forFurther = drsname.get(inDex).toString()+"#"+inDex+"#"+MainUI.adharNo.get(inDex).toString()+" "+MainUI.patientname.get(inDex).toString()+" "+MainUI.age.get(inDex).toString()+" "+MainUI.gender.get(inDex).toString()+" "+decease.get(inDex).toString()+" "+MainUI.operation.get(inDex).toString()+" "+MainUI.dept.get(inDex).toString()+" "+MainUI.dod.get(inDex).toString()+" "+MainUI.labreport.get(inDex).toString()+" "+MainUI.bloodgroup.get(inDex).toString()+" "+MainUI.phonenumber.get(inDex).toString()+" "+MainUI.prescription.get(inDex).toString()+" "+MainUI.address.get(inDex).toString();
            furtherProcess.add(forFurther);
        }
             
             JOptionPane.showMessageDialog(null, "Total Clusters Formed are"+ indexes.size()+ "\\r\\n Opening Containg Folder...");
             
            
               Desktop.getDesktop().open(new File(disName));
             
        
        
        
       }
       catch(Exception e)
       {
           System.out.println("Exception" + e);
       }
      
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainClusters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainClusters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainClusters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainClusters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainClusters mm= new MainClusters();
                mm.setVisible(true);
                mm.setSize(400,350);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Disease;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
