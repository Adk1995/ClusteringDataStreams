/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cdsbsdbmc;


import static cdsbsdbmc.MainUI.drsname;
import static cdsbsdbmc.MainClusters.furtherProcess;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import javax.swing.JOptionPane;
import java.awt.*;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.util.Collection;
import java.util.Map.Entry;
import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.geom.*;
import java.io.File;
import javax.swing.*;

/**
 *
 * @author vlsi2
 */
public class DenseCluster extends javax.swing.JFrame {

    int[] grapharray;
    
    ArrayList<String> temp = new ArrayList<String>();
    ArrayList<Integer> denseClusterIndexes = new ArrayList<Integer>();

   
    /**
     * Creates new form DenseCluster
     */
    public DenseCluster() {
        initComponents();
        //System.out.println("fds"+MainUI.adharNo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Doctors = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Doctors.setBackground(new java.awt.Color(0, 102, 153));
        Doctors.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        Doctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorsActionPerformed(evt);
            }
        });
        getContentPane().add(Doctors);
        Doctors.setBounds(160, 47, 120, 30);

        jButton1.setBackground(new java.awt.Color(0, 102, 204));
        jButton1.setText("DenseClusters");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(160, 110, 120, 30);

        jButton2.setBackground(new java.awt.Color(0, 102, 153));
        jButton2.setText("Generate graph");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(160, 180, 120, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cdsbsdbmc/c1.gif"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 470, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void DoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorsActionPerformed

        temp = (ArrayList) MainUI.drsname.clone();

        List<String> newList = new ArrayList<>();
        for (Object name : temp) {
            if (!newList.contains(name.toString())) {
                newList.add(name.toString());
            }
        }

        for (Object name : newList) {
            Doctors.addItem(name.toString());
        }

    }//GEN-LAST:event_DoctorsActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            denseClusterIndexes.clear();
            String dName = Doctors.getSelectedItem().toString();
            File f = new File("DensClusters\\");
                    File[] ff= f.listFiles();
                    for(int k =0;k<ff.length;k++)
                    {
                         ff[k].delete();
                    }
            
            for (int i = 0; i < furtherProcess.size(); i++) {
                if (furtherProcess.get(i).toString().startsWith(dName)) {
                    //
                    String temp = furtherProcess.get(i).toString();
                    int firstHashIndex = temp.indexOf("#");
                    int lastHashIndex = temp.lastIndexOf("#");
                    String temp1 = temp.substring(firstHashIndex + 1, lastHashIndex);
                    int denseIndex = Integer.parseInt(temp1);
                    denseClusterIndexes.add(denseIndex);

                    //
                    
                    
                    FileOutputStream fos = new FileOutputStream("DensClusters\\" + denseIndex + ".txt");

                    String toWrite = furtherProcess.get(i).toString();
                    fos.write(toWrite.getBytes());
                    fos.close();
                    
                      Map<ArrayList<Integer>,ArrayList<Integer>> map1 = new HashMap<ArrayList<Integer>,ArrayList<Integer>>();
        ArrayList<Integer> newVals = new ArrayList<Integer>();
        newVals.clear();
        int minValu = denseClusterIndexes.get(0);
        int maxValu = denseClusterIndexes.get(denseClusterIndexes.size()-1);
        for(int i1=0;i1<denseClusterIndexes.size();i1++){
            Random rand = new Random();
            int randomNum = rand.nextInt((maxValu - minValu) + 1) + minValu;
            newVals.add(randomNum);
        }       
        map1.put(denseClusterIndexes,newVals);
        
        FileOutputStream fos11 = new FileOutputStream("dens.txt");
        ObjectOutputStream os11 = new ObjectOutputStream(fos11);
        os11.writeObject(map1); 
       os11.close();
        fos11.close();
      
                }

            }
            if(denseClusterIndexes.size()==0)
            {
                JOptionPane.showMessageDialog(null, "No cluster found");
            }
            else{

            JOptionPane.showMessageDialog(null, "Cluster Created");
            }
        } /////
        catch (Exception e) {
            //System.out.println("Exception" + e);
        JOptionPane.showMessageDialog(null, " cluster Found with error");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            
           
            
//newly added code ...start

      //int values[] = {};
      File  file = new File("D:\\sasi\\cdsbsdbmc\\DensClusters");
      String files[] = file.list();
      int values[] = new int[files.length];
      for(int i=0;i<files.length;i++){
          String ggg = files[i];
           System.out.println(ggg);          
          String gg = ggg.substring(0,ggg.lastIndexOf("."));
          System.out.println(gg);
          int temp = Integer.parseInt(gg);
          values[i] = temp%100;
      }
     
//newly added code ...ends


            Frame f = new Frame();            
            Points g = new Points(values);
            
            f.add(g);
            f.setSize(400,400);
            f.setLocation(400,200);
            f.setVisible(true);
        
           
           

        } catch (Exception e) {
            System.out.println("fdfdf" + e);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DenseCluster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DenseCluster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DenseCluster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DenseCluster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DenseCluster dd=new DenseCluster();
                dd.setVisible(true);
                dd.setSize(490,330);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Doctors;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
